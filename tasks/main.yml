---

- name: Install SELinux libsemanage-python EL 7 support.
  yum:
    name:
      - libsemanage-python
    state: present
  when: ansible_distribution_major_version|int == 7

- name: Install SELinux libsemanage-python EL 8 support.
  yum:
    name:
      - python3-libsemanage
    state: present
  when: ansible_distribution_major_version|int == 8

- name: Install Apache.
  yum:
    name:
      - httpd
    state: present

- name: Install mod_wsgi for EL 7.
  yum:
    name:
      - mod_wsgi
    state: present
  when: ansible_distribution_major_version|int == 7

- name: Install mod_wsgi for EL 8.
  yum:
    name:
      - python3-mod_wsgi
    state: present
  when: ansible_distribution_major_version|int == 8

- name: Start Apache.
  service:
    name: httpd
    enabled: yes
    state: started

- block:
  - name: Set SELinux permissions to allow Apache to access pgadmin sqlite db.
    seboolean:
      name: httpd_can_network_connect_db
      state: yes
      persistent: yes

  - name: Set SELinux permissions to allow Apache to use LDAP authentication.
    seboolean:
      name: httpd_can_network_connect
      state: yes
      persistent: yes

  - name: Set SELinux permissions to allow Apache to email password resets.
    seboolean:
      name: httpd_can_sendmail
      state: yes
      persistent: yes

  when:
    - ansible_selinux is defined
    - ansible_selinux
    - ansible_selinux.status == 'enabled'

# pub  1024D/442DF0F8 2008-01-08 PostgreSQL RPM Building Project <pgsql-pkg-yum@postgresql.org>
- name: Import pgdg RPM GPG key.
  rpm_key:
    key: https://download.postgresql.org/pub/repos/yum/RPM-GPG-KEY-PGDG
    fingerprint: 68C9E2B91A37D136FE74D1761F16D2E1442DF0F8
    state: present

- name: Add PostgreSQL repo.
  yum:
    name: "{{ pgdg_package }}"
    state: present

- name: Add pgAdmin4 repo.
  yum:
    name: "{{ pgadmin_package }}"
    disable_gpg_check: yes
    state: present

- name: Install python pip modules.
  pip:
    name:
      - alembic
      - bcrypt
      - blinker
      - click
      - Flask
      - flask_babelex
      - flask-compress
      - Flask-Security-Too>=3.0.0
      - flask-socketio
      - future
      - ldap3
      - passlib
      - pexpect
      - psycopg2-binary
      - python-dateutil>=2.8.0
      - pytz
      - setuptools-rust
      - simplejson
      - six
      - speaklater
      - sshtunnel>=0.1.5
      - SQLAlchemy>=1.3.13
      - sqlparse
      - werkzeug
      - WTForms
    state: present
  notify: restart httpd

- name: Install pgAdmin4-web.
  yum:
    name: pgadmin4-web
    update_cache: yes
    state: present

- name: Install client packages for EL 7.
  yum:
    name: postgresql
    state: present
  when: ansible_distribution_major_version|int == 7

- name: Install client packages for EL 8.
  dnf:
    name: postgresql
    state: present
  when: ansible_distribution_major_version|int == 8

- name: Locate the setup python script.
  find:
    paths: /usr/pgadmin4
    patterns: setup.py
    file_type: file
    recurse: yes
  register: python_setup_path

- name: Show location of pgadmin4 directory.
  debug:
    var: python_setup_path

- name: Initialize pgAdmin4.
  expect:
    command: "python3 {{ python_setup_path.files[0].path }}"
    creates: /var/lib/pgadmin/pgadmin4.db
    echo: yes
    responses:
      'Email\ address:': "{{ pgadmin_setup_email | trim }}"
      'Password:': "{{ pgadmin_setup_password | trim }}"
      'Retype\ password:': "{{ pgadmin_setup_password | trim }}"
      'Do\ you\ wish\ to\ continue\ \(y/n\)\?': "y"
      'Would\ you\ like\ to\ continue\ \(y/n\)\?': "y"
#  no_log: true

- name: Install pgAdmin4 site config.
  copy:
    src: /etc/httpd/conf.d/pgadmin4.conf.sample
    dest: /etc/httpd/conf.d/pgadmin4.conf
    remote_src: yes
    mode: 0644
  notify: restart httpd

- name: "Fix pgAdmin permissions."  # noqa 208
  file:
    path: "{{ item }}"
    setype: httpd_sys_rw_content_t
    owner: apache
    group: apache
    recurse: yes
  with_items:
    - /var/log/pgadmin
    - /var/lib/pgadmin
